{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","clickedFriend","id","Wrapper","children","Title","App","state","friends","clickedId","score","topScore","temporaryValue","randomIndex","array","_this","currentIndex","length","Math","floor","random","setState","_this2","this","components_Wrapper","components_Title","map","friend","components_FriendCard","key","occupation","location","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"q9/FAkCeA,MA/Bf,SAAoBC,GAClB,OAMEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAenCP,EAAAC,EAAAC,cAAA,QAAMM,QAAS,kBAAMT,EAAMU,cAAcV,EAAMW,KAAKP,UAAU,UAA9D,wBCpBSQ,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,kBC+DvBE,6MA3DbC,MAAQ,CACNC,UACAC,UAAW,GACXC,MAAO,EACPC,SAAU,KAGZV,cAAgB,SAAAC,GAOd,IAJA,IACiCU,EAAgBC,EAD7CC,EAAQC,EAAKR,MAAMC,QACnBQ,EAAeF,EAAMG,OAGlB,IAAMD,GAGXH,EAAcK,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCJ,EAAiBE,EAHjBE,GAAgB,GAIhBF,EAAME,GAAgBF,EAAMD,GAC5BC,EAAMD,GAAeD,EAMvBG,EAAKM,SAAS,CAAEb,QAASM,6EASlB,IAAAQ,EAAAC,KACP,OACE/B,EAAAC,EAAAC,cAAC8B,EAAD,KAEEhC,EAAAC,EAAAC,cAAC+B,EAAD,sEACCF,KAAKhB,MAAMC,QAAQkB,IAAI,SAAAC,GAAM,OAC5BnC,EAAAC,EAAAC,cAACkC,EAAD,CACE3B,cAAeqB,EAAKrB,cACpBC,GAAIyB,EAAOzB,GACX2B,IAAKF,EAAOzB,GACZL,KAAM8B,EAAO9B,KACbE,MAAO4B,EAAO5B,MACd+B,WAAYH,EAAOG,WACnBC,SAAUJ,EAAOI,qBArDXC,mBCDlBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9efff5ea.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    // <div>\n    //   <nav class=\"navbar navbar-light bg-light\">\n    //       <a class=\"navbar-brand\" href=\"#\">Clicky Game!</a>\n    //     </nav>\n    // </div>\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      {/* <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div> */}\n      <span onClick={() => props.clickedFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedId: [],\n    score: 0,\n    topScore: 0\n  };\n\n  clickedFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    // const friends = this.state.friends.filter(friend => friend.id !== id);\n    let array = this.state.friends;\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    // return array;\n\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends: array });\n\n    //inside this is going to push the id to the clickedId array within the state that will increase the score and then on the same \n    //split function into conditionals !!\n    //loop through the clickedFriends, if then's \n    //array for if id of clicked friend is equal to the id of the alreadyclicked then you lose\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        \n        <Title>Your choice! Try not to click on the same F.R.I.E.N.D. twice!</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickedFriend={this.clickedFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}